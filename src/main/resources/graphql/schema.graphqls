schema {
    query: Query
    mutation: Mutation
}

type Post {
    id: ID!
    title: String!
    content: String!
    author: Author!
    status: Status!
}

type Author {
    id: ID!
    name: String!
    age: Int
    posts: [Post]!
    status: Status
}

enum Status {
 ACTIVE, NON_ACTIVE
}

input PostInputRequest {
    title: String!
    content: String!
    authorId: Int!
}

input AuthorInputRequest {
    name: String!
    age: Int!
}

type Mutation {
    newPost(input: PostInputRequest): Post
    newAuthor(input: AuthorInputRequest): Author
}

type Query {
    recentPosts(limit:Int, offset:Int, orderBy:String): [Post]
    authorsWithTopPosts: [Author]
}